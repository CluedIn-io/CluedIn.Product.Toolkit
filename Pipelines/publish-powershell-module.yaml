trigger: none

name: ${{ parameters.moduleName }} v${{ parameters.moduleVersion }} Publish

parameters:
- name: 'moduleVersion'
  displayName: 'Module Version'
  type: string
- name: 'moduleName'
  displayName: 'Module Name'
  type: string
  default: CluedIn.Product.Toolkit

steps:
- pwsh: |
    Write-Host "I will run pester"
  displayName: Test Module

- pwsh: |
    $modulePath = "$(System.DefaultWorkingDirectory)/Modules/${{ parameters.moduleName }}"
    $artifactPath = '$(Build.ArtifactStagingDirectory)/'
    Copy-Item -Path $modulePath -Destination $artifactPath -Recurse
    Remove-Item -Path $artifactPath/${{ parameters.moduleName }}/tests -Force -Recurse
  displayName: Copy Module to artifact staging

- pwsh: |
    $ModulePath = '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}'
    Write-Host "Module Path: $ModulePath"

    $content = Get-Content -Path "$ModulePath/${{ parameters.moduleName }}.psd1"
    $version = $content | select-string -Pattern "ModuleVersion = '(.*)'"
    [version]$currentVersion = $version.Matches.Groups[1].value
    Write-Host "Current Version: $currentVersion"
    [version]$newVersion = '${{ parameters.moduleVersion }}'

    if ($newVersion -le $currentVersion) {
        throw "The specified version '$newVersion' is lower than '$currentVersion'"
    }

    Update-ModuleManifest -Path $ModulePath/${{ parameters.moduleName }}.psd1 -ModuleVersion ${{ parameters.moduleVersion }}
  displayName: Update Module Version

- task: NuGetCommand@2
  inputs:
    command: pack
    versioningScheme: byEnvVar
    versionEnvVar: ${{ parameters.moduleVersion }}
    packagesToPack: $(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}
    packDestination: '$(Build.ArtifactStagingDirectory)'

- pwsh: |
    Get-ChildItem -Path $(Build.ArtifactStagingDirectory) -Recurse | Out-String

- publish: $(Build.ArtifactStagingDirectory)
  artifact: PowershellModule

- pwsh: |
    Write-Host "I will get ready to package and push to ADO"
  displayName: Publish Module